-- @path MM=/SmallUML/model/smalluml.ecore
-- @path MM1=/UML/model/uml.ecore

module Small2UML;
create OUT : MM1 from IN : MM;

rule SmallDiagram2Diagram {
	from
		f : MM!Diagram
	to
		t : MM1!Package (
			name <- f.name,
			packagedElement <- f.entities
		)
}

rule SmallType2Type {
	from
		f : MM!Type
	to
		t : MM1!DataType (
			name <- f.name
		)
}

rule SmallClass2Class {
	from
		f : MM!Class
	to
		t1 : MM1!Class (
			name <- f.name,
			ownedAttribute <- f.attributes,
			ownedOperation <- f.operations,
			--superClass <- Set{f.extends},
			isAbstract <- f.abstract
		)	
}

rule SmallExtends {
	from
		pere : MM!Class,
		fils : MM!Class (fils.extends = pere)
	to
		t : MM1!Generalization (
			source <- fils,
			target <- pere
		)	
}

rule SmallAttribute2Attribute {
	from
		f : MM!Attribute
	to
		t : MM1!Property (
			name <- f.name,
			type <- f.type
		)
}

rule SmallOperation2Operation {
	from
		f : MM!Operation
	to
		t : MM1!Operation (
			name <- f.name
			--type <- f.returnType,
			--ownedParameter <- f.parameters
		)
}
