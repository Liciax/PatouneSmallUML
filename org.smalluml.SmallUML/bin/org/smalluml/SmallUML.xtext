// automatically generated by Xtext
grammar org.xtext.example.mydsl.SmallUML with org.eclipse.xtext.common.Terminals

import "http://www.univ-nantes.fr/smalluml" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

// Entry rule generating a SmallUML Diagram
Diagram returns Diagram:
	{Diagram}
	'Diagram'
	name=ID
	'{'
	(entities+=AbstractEntity)*
	'}'
;

// Rule grouping AbstractEntity's related rules
AbstractEntity returns AbstractEntity:
	Class | Enumeration | Association;

// Rule grouping Type's related rules
Type returns Type:
	smallBoolean | smallInteger | smallReal | smallString
;

// Rule generating a Class
Class returns Class:
	{Class}
	(abstract?='abstract')?
	'Class'
	name=EString ('extends' extends=[Class|EString])?
	'{'
		('attributes' '(' attributes+=Attribute (',' attributes+=Attribute)* ')' )?
		('operations' '(' operations+=Operation (',' operations+=Operation)* ')' )?
	'}';

// Rule generating an Attribute
Attribute returns Attribute:
	{Attribute}
	name=ID ':' type=Type
;

// Rule generating an Operation
Operation returns Operation:
	{Operation}
	returnType=Type  name=EString '(' (parameters+=Parameter)? (',' parameters+=Parameter)* ')'
;

// Rule generating a Parameter
Parameter returns Parameter:
	{Parameter}
	(type=Type ':')? name=EString
;

// Rule generating an Association, with 2+ role
Association returns Association:
	{Association}
	'Association'
	name=ID
	'{'
		roles+=Role (',' roles+=Role)+
	'}'
;

// Rule generating a Role, with a name, a cardinality and a reference to a class
Role returns Role:
	{Role}
	'role' name=ID cardinality=Cardinality 'with' entity=[Class|EString]
;

// Rule generating a Cardinality, with a lower and a upper bound
Cardinality returns Cardinality:
	{Cardinality}
	'[' lowerBound=EString ',' upperBound=EString ']' 
;


// Rule generating Enumeration
Enumeration returns Enumeration:
	{Enumeration}
	'Enumeration'
	name=ID
	'{'
		elements+=EString (',' elements+=EString)*
	'}';

// Collection of types from SmallUML Metamodel
smallBoolean returns smallBoolean:
	{smallBoolean}
	'smallBoolean'
	;

smallInteger returns smallInteger:
	{smallInteger}
	'smallInteger'
	;

smallReal returns smallReal:
	{smallReal}
	'smallReal'
	;

smallString returns smallString:
	{smallString}
	'smallString'
	;

Date returns Date:
	{Date}
	'Date'
	'{'
		('day' day=EString)?
		('month' month=EString)?
		('year' year=EString)?
		('timestamp' timestamp=[Timestamp|EString])?
	'}';

Timestamp returns Timestamp:
	{Timestamp}
	'Timestamp'
	'{'
		('hours' hours=EInt)?
		('minutes' minutes=EInt)?
		('seconds' seconds=EInt)?
	'}';

// Types from ecore
EString returns ecore::EString:
	STRING | ID;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

EInt returns ecore::EInt:
	'-'? INT;
